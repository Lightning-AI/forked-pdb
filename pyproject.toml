[build-system]
build-backend = "setuptools.build_meta"
requires = [
  "setuptools>=80.3",
  "wheel>=0.45.0",
  "packaging>=25.0",
]

[project]
name = "fpdb"
version = "0.0.0.dev2"
description = "Python package for debugging multi-processed code using PDB."
readme = "README.md"
license = { file = "LICENSE" }

authors = [
  { name = "Lightning AI", email = "contact@lightning.ai" },
]
classifiers = [
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]
#dependencies = [
#  "pdb",
#]

optional-dependencies.test = [
  "pytest>=8.1.1",
  "pytest-rerunfailures>=14",
  "pytest-timeout>=2.3.1",
]
urls.documentation = "https://github.com/lightning-AI/litgpt/tutorials"
urls.homepage = "https://github.com/Lightning-AI/forked-pdb"
#scripts.litgpt = "litgpt.__main__:main"

[tool.setuptools.packages.find]
where = ["src"]
include = [
  "fpdb*",  # Or simply "fpdb" if that's the only package
]
exclude = []

[tool.setuptools.package-data]
fpdb = [
  "LICENSE",
  "README.md",
]

[tool.ruff]
target-version = "py38"
line-length = 120
exclude = [
  "build",
  "dist",
  "docs",
]

lint.select = [
  "E",
  "F",  # see: https://pypi.org/project/pyflakes
  "I",  # implementation for isort
  "UP", # see: https://docs.astral.sh/ruff/rules/#pyupgrade-up
  "W",  # see: https://pypi.org/project/pycodestyle
]
#extend-select = [
#    "C4",  # see: https://pypi.org/project/flake8-comprehensions
#    "PT",  # see: https://pypi.org/project/flake8-pytest-style
#    "RET",  # see: https://pypi.org/project/flake8-return
#    "SIM",  # see: https://pypi.org/project/flake8-simplify
#]
#lint.ignore = [
#  "E501", # Line too long
#  "E731", # Do not assign a lambda expression, use a def
#]
# Use Google-style docstrings.
lint.pydocstyle.convention = "google"

[tool.codespell]
#skip = '*.py'
quiet-level = 3

[tool.pytest.ini_options]
addopts = [
  "--strict-markers",
  #"--doctest-modules",
  "--color=yes",
  "--disable-pytest-warnings",
]
